/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var google_protobuf_descriptor_pb = require('google-protobuf/google/protobuf/descriptor_pb.js');
goog.object.extend(proto, google_protobuf_descriptor_pb);
goog.exportSymbol('proto.scalapb.EnumOptions', null, global);
goog.exportSymbol('proto.scalapb.EnumValueOptions', null, global);
goog.exportSymbol('proto.scalapb.FieldOptions', null, global);
goog.exportSymbol('proto.scalapb.MessageOptions', null, global);
goog.exportSymbol('proto.scalapb.OneofOptions', null, global);
goog.exportSymbol('proto.scalapb.ScalaPbOptions', null, global);
goog.exportSymbol('proto.scalapb.ScalaPbOptions.EnumValueNaming', null, global);
goog.exportSymbol('proto.scalapb.ScalaPbOptions.OptionsScope', null, global);
goog.exportSymbol('proto.scalapb.enumOptions', null, global);
goog.exportSymbol('proto.scalapb.enumValue', null, global);
goog.exportSymbol('proto.scalapb.field', null, global);
goog.exportSymbol('proto.scalapb.message', null, global);
goog.exportSymbol('proto.scalapb.oneof', null, global);
goog.exportSymbol('proto.scalapb.options', null, global);

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.scalapb.ScalaPbOptions = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, 500, proto.scalapb.ScalaPbOptions.repeatedFields_, null);
};
goog.inherits(proto.scalapb.ScalaPbOptions, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.scalapb.ScalaPbOptions.displayName = 'proto.scalapb.ScalaPbOptions';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.scalapb.ScalaPbOptions.repeatedFields_ = [3,4];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.scalapb.ScalaPbOptions.prototype.toObject = function(opt_includeInstance) {
  return proto.scalapb.ScalaPbOptions.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.scalapb.ScalaPbOptions} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.scalapb.ScalaPbOptions.toObject = function(includeInstance, msg) {
  var f, obj = {
    packageName: jspb.Message.getField(msg, 1),
    flatPackage: jspb.Message.getField(msg, 2),
    importList: jspb.Message.getRepeatedField(msg, 3),
    preambleList: jspb.Message.getRepeatedField(msg, 4),
    singleFile: jspb.Message.getField(msg, 5),
    noPrimitiveWrappers: jspb.Message.getField(msg, 7),
    primitiveWrappers: jspb.Message.getField(msg, 6),
    collectionType: jspb.Message.getField(msg, 8),
    preserveUnknownFields: jspb.Message.getFieldWithDefault(msg, 9, true),
    objectName: jspb.Message.getField(msg, 10),
    scope: jspb.Message.getField(msg, 11),
    lenses: jspb.Message.getFieldWithDefault(msg, 12, true),
    retainSourceCodeInfo: jspb.Message.getField(msg, 13),
    mapType: jspb.Message.getField(msg, 14),
    noDefaultValuesInConstructor: jspb.Message.getField(msg, 15),
    enumValueNaming: jspb.Message.getField(msg, 16),
    testOnlyNoJavaConversions: jspb.Message.getField(msg, 100001)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.scalapb.ScalaPbOptions}
 */
proto.scalapb.ScalaPbOptions.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.scalapb.ScalaPbOptions;
  return proto.scalapb.ScalaPbOptions.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.scalapb.ScalaPbOptions} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.scalapb.ScalaPbOptions}
 */
proto.scalapb.ScalaPbOptions.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setPackageName(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setFlatPackage(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.addImport(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.addPreamble(value);
      break;
    case 5:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setSingleFile(value);
      break;
    case 7:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setNoPrimitiveWrappers(value);
      break;
    case 6:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setPrimitiveWrappers(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setCollectionType(value);
      break;
    case 9:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setPreserveUnknownFields(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.setObjectName(value);
      break;
    case 11:
      var value = /** @type {!proto.scalapb.ScalaPbOptions.OptionsScope} */ (reader.readEnum());
      msg.setScope(value);
      break;
    case 12:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setLenses(value);
      break;
    case 13:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setRetainSourceCodeInfo(value);
      break;
    case 14:
      var value = /** @type {string} */ (reader.readString());
      msg.setMapType(value);
      break;
    case 15:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setNoDefaultValuesInConstructor(value);
      break;
    case 16:
      var value = /** @type {!proto.scalapb.ScalaPbOptions.EnumValueNaming} */ (reader.readEnum());
      msg.setEnumValueNaming(value);
      break;
    case 100001:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setTestOnlyNoJavaConversions(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.scalapb.ScalaPbOptions.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.scalapb.ScalaPbOptions.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.scalapb.ScalaPbOptions} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.scalapb.ScalaPbOptions.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeBool(
      2,
      f
    );
  }
  f = message.getImportList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      3,
      f
    );
  }
  f = message.getPreambleList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      4,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeBool(
      5,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 7));
  if (f != null) {
    writer.writeBool(
      7,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeBool(
      6,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 8));
  if (f != null) {
    writer.writeString(
      8,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 9));
  if (f != null) {
    writer.writeBool(
      9,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 10));
  if (f != null) {
    writer.writeString(
      10,
      f
    );
  }
  f = /** @type {!proto.scalapb.ScalaPbOptions.OptionsScope} */ (jspb.Message.getField(message, 11));
  if (f != null) {
    writer.writeEnum(
      11,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 12));
  if (f != null) {
    writer.writeBool(
      12,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 13));
  if (f != null) {
    writer.writeBool(
      13,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 14));
  if (f != null) {
    writer.writeString(
      14,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 15));
  if (f != null) {
    writer.writeBool(
      15,
      f
    );
  }
  f = /** @type {!proto.scalapb.ScalaPbOptions.EnumValueNaming} */ (jspb.Message.getField(message, 16));
  if (f != null) {
    writer.writeEnum(
      16,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 100001));
  if (f != null) {
    writer.writeBool(
      100001,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.scalapb.ScalaPbOptions.OptionsScope = {
  FILE: 0,
  PACKAGE: 1
};

/**
 * @enum {number}
 */
proto.scalapb.ScalaPbOptions.EnumValueNaming = {
  AS_IN_PROTO: 0,
  CAMEL_CASE: 1
};

/**
 * optional string package_name = 1;
 * @return {string}
 */
proto.scalapb.ScalaPbOptions.prototype.getPackageName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.scalapb.ScalaPbOptions.prototype.setPackageName = function(value) {
  jspb.Message.setField(this, 1, value);
};


proto.scalapb.ScalaPbOptions.prototype.clearPackageName = function() {
  jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.scalapb.ScalaPbOptions.prototype.hasPackageName = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional bool flat_package = 2;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.scalapb.ScalaPbOptions.prototype.getFlatPackage = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 2, false));
};


/** @param {boolean} value */
proto.scalapb.ScalaPbOptions.prototype.setFlatPackage = function(value) {
  jspb.Message.setField(this, 2, value);
};


proto.scalapb.ScalaPbOptions.prototype.clearFlatPackage = function() {
  jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.scalapb.ScalaPbOptions.prototype.hasFlatPackage = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * repeated string import = 3;
 * @return {!Array<string>}
 */
proto.scalapb.ScalaPbOptions.prototype.getImportList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 3));
};


/** @param {!Array<string>} value */
proto.scalapb.ScalaPbOptions.prototype.setImportList = function(value) {
  jspb.Message.setField(this, 3, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 */
proto.scalapb.ScalaPbOptions.prototype.addImport = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 3, value, opt_index);
};


proto.scalapb.ScalaPbOptions.prototype.clearImportList = function() {
  this.setImportList([]);
};


/**
 * repeated string preamble = 4;
 * @return {!Array<string>}
 */
proto.scalapb.ScalaPbOptions.prototype.getPreambleList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 4));
};


/** @param {!Array<string>} value */
proto.scalapb.ScalaPbOptions.prototype.setPreambleList = function(value) {
  jspb.Message.setField(this, 4, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 */
proto.scalapb.ScalaPbOptions.prototype.addPreamble = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 4, value, opt_index);
};


proto.scalapb.ScalaPbOptions.prototype.clearPreambleList = function() {
  this.setPreambleList([]);
};


/**
 * optional bool single_file = 5;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.scalapb.ScalaPbOptions.prototype.getSingleFile = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 5, false));
};


/** @param {boolean} value */
proto.scalapb.ScalaPbOptions.prototype.setSingleFile = function(value) {
  jspb.Message.setField(this, 5, value);
};


proto.scalapb.ScalaPbOptions.prototype.clearSingleFile = function() {
  jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.scalapb.ScalaPbOptions.prototype.hasSingleFile = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional bool no_primitive_wrappers = 7;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.scalapb.ScalaPbOptions.prototype.getNoPrimitiveWrappers = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 7, false));
};


/** @param {boolean} value */
proto.scalapb.ScalaPbOptions.prototype.setNoPrimitiveWrappers = function(value) {
  jspb.Message.setField(this, 7, value);
};


proto.scalapb.ScalaPbOptions.prototype.clearNoPrimitiveWrappers = function() {
  jspb.Message.setField(this, 7, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.scalapb.ScalaPbOptions.prototype.hasNoPrimitiveWrappers = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional bool primitive_wrappers = 6;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.scalapb.ScalaPbOptions.prototype.getPrimitiveWrappers = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 6, false));
};


/** @param {boolean} value */
proto.scalapb.ScalaPbOptions.prototype.setPrimitiveWrappers = function(value) {
  jspb.Message.setField(this, 6, value);
};


proto.scalapb.ScalaPbOptions.prototype.clearPrimitiveWrappers = function() {
  jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.scalapb.ScalaPbOptions.prototype.hasPrimitiveWrappers = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional string collection_type = 8;
 * @return {string}
 */
proto.scalapb.ScalaPbOptions.prototype.getCollectionType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/** @param {string} value */
proto.scalapb.ScalaPbOptions.prototype.setCollectionType = function(value) {
  jspb.Message.setField(this, 8, value);
};


proto.scalapb.ScalaPbOptions.prototype.clearCollectionType = function() {
  jspb.Message.setField(this, 8, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.scalapb.ScalaPbOptions.prototype.hasCollectionType = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional bool preserve_unknown_fields = 9;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.scalapb.ScalaPbOptions.prototype.getPreserveUnknownFields = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 9, true));
};


/** @param {boolean} value */
proto.scalapb.ScalaPbOptions.prototype.setPreserveUnknownFields = function(value) {
  jspb.Message.setField(this, 9, value);
};


proto.scalapb.ScalaPbOptions.prototype.clearPreserveUnknownFields = function() {
  jspb.Message.setField(this, 9, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.scalapb.ScalaPbOptions.prototype.hasPreserveUnknownFields = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional string object_name = 10;
 * @return {string}
 */
proto.scalapb.ScalaPbOptions.prototype.getObjectName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/** @param {string} value */
proto.scalapb.ScalaPbOptions.prototype.setObjectName = function(value) {
  jspb.Message.setField(this, 10, value);
};


proto.scalapb.ScalaPbOptions.prototype.clearObjectName = function() {
  jspb.Message.setField(this, 10, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.scalapb.ScalaPbOptions.prototype.hasObjectName = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * optional OptionsScope scope = 11;
 * @return {!proto.scalapb.ScalaPbOptions.OptionsScope}
 */
proto.scalapb.ScalaPbOptions.prototype.getScope = function() {
  return /** @type {!proto.scalapb.ScalaPbOptions.OptionsScope} */ (jspb.Message.getFieldWithDefault(this, 11, 0));
};


/** @param {!proto.scalapb.ScalaPbOptions.OptionsScope} value */
proto.scalapb.ScalaPbOptions.prototype.setScope = function(value) {
  jspb.Message.setField(this, 11, value);
};


proto.scalapb.ScalaPbOptions.prototype.clearScope = function() {
  jspb.Message.setField(this, 11, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.scalapb.ScalaPbOptions.prototype.hasScope = function() {
  return jspb.Message.getField(this, 11) != null;
};


/**
 * optional bool lenses = 12;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.scalapb.ScalaPbOptions.prototype.getLenses = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 12, true));
};


/** @param {boolean} value */
proto.scalapb.ScalaPbOptions.prototype.setLenses = function(value) {
  jspb.Message.setField(this, 12, value);
};


proto.scalapb.ScalaPbOptions.prototype.clearLenses = function() {
  jspb.Message.setField(this, 12, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.scalapb.ScalaPbOptions.prototype.hasLenses = function() {
  return jspb.Message.getField(this, 12) != null;
};


/**
 * optional bool retain_source_code_info = 13;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.scalapb.ScalaPbOptions.prototype.getRetainSourceCodeInfo = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 13, false));
};


/** @param {boolean} value */
proto.scalapb.ScalaPbOptions.prototype.setRetainSourceCodeInfo = function(value) {
  jspb.Message.setField(this, 13, value);
};


proto.scalapb.ScalaPbOptions.prototype.clearRetainSourceCodeInfo = function() {
  jspb.Message.setField(this, 13, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.scalapb.ScalaPbOptions.prototype.hasRetainSourceCodeInfo = function() {
  return jspb.Message.getField(this, 13) != null;
};


/**
 * optional string map_type = 14;
 * @return {string}
 */
proto.scalapb.ScalaPbOptions.prototype.getMapType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 14, ""));
};


/** @param {string} value */
proto.scalapb.ScalaPbOptions.prototype.setMapType = function(value) {
  jspb.Message.setField(this, 14, value);
};


proto.scalapb.ScalaPbOptions.prototype.clearMapType = function() {
  jspb.Message.setField(this, 14, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.scalapb.ScalaPbOptions.prototype.hasMapType = function() {
  return jspb.Message.getField(this, 14) != null;
};


/**
 * optional bool no_default_values_in_constructor = 15;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.scalapb.ScalaPbOptions.prototype.getNoDefaultValuesInConstructor = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 15, false));
};


/** @param {boolean} value */
proto.scalapb.ScalaPbOptions.prototype.setNoDefaultValuesInConstructor = function(value) {
  jspb.Message.setField(this, 15, value);
};


proto.scalapb.ScalaPbOptions.prototype.clearNoDefaultValuesInConstructor = function() {
  jspb.Message.setField(this, 15, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.scalapb.ScalaPbOptions.prototype.hasNoDefaultValuesInConstructor = function() {
  return jspb.Message.getField(this, 15) != null;
};


/**
 * optional EnumValueNaming enum_value_naming = 16;
 * @return {!proto.scalapb.ScalaPbOptions.EnumValueNaming}
 */
proto.scalapb.ScalaPbOptions.prototype.getEnumValueNaming = function() {
  return /** @type {!proto.scalapb.ScalaPbOptions.EnumValueNaming} */ (jspb.Message.getFieldWithDefault(this, 16, 0));
};


/** @param {!proto.scalapb.ScalaPbOptions.EnumValueNaming} value */
proto.scalapb.ScalaPbOptions.prototype.setEnumValueNaming = function(value) {
  jspb.Message.setField(this, 16, value);
};


proto.scalapb.ScalaPbOptions.prototype.clearEnumValueNaming = function() {
  jspb.Message.setField(this, 16, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.scalapb.ScalaPbOptions.prototype.hasEnumValueNaming = function() {
  return jspb.Message.getField(this, 16) != null;
};


/**
 * optional bool test_only_no_java_conversions = 100001;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.scalapb.ScalaPbOptions.prototype.getTestOnlyNoJavaConversions = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 100001, false));
};


/** @param {boolean} value */
proto.scalapb.ScalaPbOptions.prototype.setTestOnlyNoJavaConversions = function(value) {
  jspb.Message.setField(this, 100001, value);
};


proto.scalapb.ScalaPbOptions.prototype.clearTestOnlyNoJavaConversions = function() {
  jspb.Message.setField(this, 100001, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.scalapb.ScalaPbOptions.prototype.hasTestOnlyNoJavaConversions = function() {
  return jspb.Message.getField(this, 100001) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.scalapb.MessageOptions = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.scalapb.MessageOptions.repeatedFields_, null);
};
goog.inherits(proto.scalapb.MessageOptions, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.scalapb.MessageOptions.displayName = 'proto.scalapb.MessageOptions';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.scalapb.MessageOptions.repeatedFields_ = [1,2,3,5,6];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.scalapb.MessageOptions.prototype.toObject = function(opt_includeInstance) {
  return proto.scalapb.MessageOptions.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.scalapb.MessageOptions} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.scalapb.MessageOptions.toObject = function(includeInstance, msg) {
  var f, obj = {
    extendsList: jspb.Message.getRepeatedField(msg, 1),
    companionExtendsList: jspb.Message.getRepeatedField(msg, 2),
    annotationsList: jspb.Message.getRepeatedField(msg, 3),
    type: jspb.Message.getField(msg, 4),
    companionAnnotationsList: jspb.Message.getRepeatedField(msg, 5),
    sealedOneofExtendsList: jspb.Message.getRepeatedField(msg, 6),
    noBox: jspb.Message.getField(msg, 7)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.scalapb.MessageOptions}
 */
proto.scalapb.MessageOptions.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.scalapb.MessageOptions;
  return proto.scalapb.MessageOptions.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.scalapb.MessageOptions} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.scalapb.MessageOptions}
 */
proto.scalapb.MessageOptions.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.addExtends(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.addCompanionExtends(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.addAnnotations(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setType(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.addCompanionAnnotations(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.addSealedOneofExtends(value);
      break;
    case 7:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setNoBox(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.scalapb.MessageOptions.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.scalapb.MessageOptions.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.scalapb.MessageOptions} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.scalapb.MessageOptions.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getExtendsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      1,
      f
    );
  }
  f = message.getCompanionExtendsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      2,
      f
    );
  }
  f = message.getAnnotationsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      3,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getCompanionAnnotationsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      5,
      f
    );
  }
  f = message.getSealedOneofExtendsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      6,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 7));
  if (f != null) {
    writer.writeBool(
      7,
      f
    );
  }
};


/**
 * repeated string extends = 1;
 * @return {!Array<string>}
 */
proto.scalapb.MessageOptions.prototype.getExtendsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 1));
};


/** @param {!Array<string>} value */
proto.scalapb.MessageOptions.prototype.setExtendsList = function(value) {
  jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 */
proto.scalapb.MessageOptions.prototype.addExtends = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


proto.scalapb.MessageOptions.prototype.clearExtendsList = function() {
  this.setExtendsList([]);
};


/**
 * repeated string companion_extends = 2;
 * @return {!Array<string>}
 */
proto.scalapb.MessageOptions.prototype.getCompanionExtendsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 2));
};


/** @param {!Array<string>} value */
proto.scalapb.MessageOptions.prototype.setCompanionExtendsList = function(value) {
  jspb.Message.setField(this, 2, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 */
proto.scalapb.MessageOptions.prototype.addCompanionExtends = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 2, value, opt_index);
};


proto.scalapb.MessageOptions.prototype.clearCompanionExtendsList = function() {
  this.setCompanionExtendsList([]);
};


/**
 * repeated string annotations = 3;
 * @return {!Array<string>}
 */
proto.scalapb.MessageOptions.prototype.getAnnotationsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 3));
};


/** @param {!Array<string>} value */
proto.scalapb.MessageOptions.prototype.setAnnotationsList = function(value) {
  jspb.Message.setField(this, 3, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 */
proto.scalapb.MessageOptions.prototype.addAnnotations = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 3, value, opt_index);
};


proto.scalapb.MessageOptions.prototype.clearAnnotationsList = function() {
  this.setAnnotationsList([]);
};


/**
 * optional string type = 4;
 * @return {string}
 */
proto.scalapb.MessageOptions.prototype.getType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/** @param {string} value */
proto.scalapb.MessageOptions.prototype.setType = function(value) {
  jspb.Message.setField(this, 4, value);
};


proto.scalapb.MessageOptions.prototype.clearType = function() {
  jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.scalapb.MessageOptions.prototype.hasType = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * repeated string companion_annotations = 5;
 * @return {!Array<string>}
 */
proto.scalapb.MessageOptions.prototype.getCompanionAnnotationsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 5));
};


/** @param {!Array<string>} value */
proto.scalapb.MessageOptions.prototype.setCompanionAnnotationsList = function(value) {
  jspb.Message.setField(this, 5, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 */
proto.scalapb.MessageOptions.prototype.addCompanionAnnotations = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 5, value, opt_index);
};


proto.scalapb.MessageOptions.prototype.clearCompanionAnnotationsList = function() {
  this.setCompanionAnnotationsList([]);
};


/**
 * repeated string sealed_oneof_extends = 6;
 * @return {!Array<string>}
 */
proto.scalapb.MessageOptions.prototype.getSealedOneofExtendsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 6));
};


/** @param {!Array<string>} value */
proto.scalapb.MessageOptions.prototype.setSealedOneofExtendsList = function(value) {
  jspb.Message.setField(this, 6, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 */
proto.scalapb.MessageOptions.prototype.addSealedOneofExtends = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 6, value, opt_index);
};


proto.scalapb.MessageOptions.prototype.clearSealedOneofExtendsList = function() {
  this.setSealedOneofExtendsList([]);
};


/**
 * optional bool no_box = 7;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.scalapb.MessageOptions.prototype.getNoBox = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 7, false));
};


/** @param {boolean} value */
proto.scalapb.MessageOptions.prototype.setNoBox = function(value) {
  jspb.Message.setField(this, 7, value);
};


proto.scalapb.MessageOptions.prototype.clearNoBox = function() {
  jspb.Message.setField(this, 7, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.scalapb.MessageOptions.prototype.hasNoBox = function() {
  return jspb.Message.getField(this, 7) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.scalapb.FieldOptions = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.scalapb.FieldOptions.repeatedFields_, null);
};
goog.inherits(proto.scalapb.FieldOptions, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.scalapb.FieldOptions.displayName = 'proto.scalapb.FieldOptions';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.scalapb.FieldOptions.repeatedFields_ = [6];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.scalapb.FieldOptions.prototype.toObject = function(opt_includeInstance) {
  return proto.scalapb.FieldOptions.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.scalapb.FieldOptions} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.scalapb.FieldOptions.toObject = function(includeInstance, msg) {
  var f, obj = {
    type: jspb.Message.getField(msg, 1),
    scalaName: jspb.Message.getField(msg, 2),
    collectionType: jspb.Message.getField(msg, 3),
    keyType: jspb.Message.getField(msg, 4),
    valueType: jspb.Message.getField(msg, 5),
    annotationsList: jspb.Message.getRepeatedField(msg, 6),
    mapType: jspb.Message.getField(msg, 7),
    noBox: jspb.Message.getField(msg, 30)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.scalapb.FieldOptions}
 */
proto.scalapb.FieldOptions.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.scalapb.FieldOptions;
  return proto.scalapb.FieldOptions.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.scalapb.FieldOptions} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.scalapb.FieldOptions}
 */
proto.scalapb.FieldOptions.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setType(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setScalaName(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setCollectionType(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setKeyType(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setValueType(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.addAnnotations(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setMapType(value);
      break;
    case 30:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setNoBox(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.scalapb.FieldOptions.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.scalapb.FieldOptions.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.scalapb.FieldOptions} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.scalapb.FieldOptions.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeString(
      3,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeString(
      4,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getAnnotationsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      6,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 7));
  if (f != null) {
    writer.writeString(
      7,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 30));
  if (f != null) {
    writer.writeBool(
      30,
      f
    );
  }
};


/**
 * optional string type = 1;
 * @return {string}
 */
proto.scalapb.FieldOptions.prototype.getType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.scalapb.FieldOptions.prototype.setType = function(value) {
  jspb.Message.setField(this, 1, value);
};


proto.scalapb.FieldOptions.prototype.clearType = function() {
  jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.scalapb.FieldOptions.prototype.hasType = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string scala_name = 2;
 * @return {string}
 */
proto.scalapb.FieldOptions.prototype.getScalaName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.scalapb.FieldOptions.prototype.setScalaName = function(value) {
  jspb.Message.setField(this, 2, value);
};


proto.scalapb.FieldOptions.prototype.clearScalaName = function() {
  jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.scalapb.FieldOptions.prototype.hasScalaName = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string collection_type = 3;
 * @return {string}
 */
proto.scalapb.FieldOptions.prototype.getCollectionType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.scalapb.FieldOptions.prototype.setCollectionType = function(value) {
  jspb.Message.setField(this, 3, value);
};


proto.scalapb.FieldOptions.prototype.clearCollectionType = function() {
  jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.scalapb.FieldOptions.prototype.hasCollectionType = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional string key_type = 4;
 * @return {string}
 */
proto.scalapb.FieldOptions.prototype.getKeyType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/** @param {string} value */
proto.scalapb.FieldOptions.prototype.setKeyType = function(value) {
  jspb.Message.setField(this, 4, value);
};


proto.scalapb.FieldOptions.prototype.clearKeyType = function() {
  jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.scalapb.FieldOptions.prototype.hasKeyType = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional string value_type = 5;
 * @return {string}
 */
proto.scalapb.FieldOptions.prototype.getValueType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/** @param {string} value */
proto.scalapb.FieldOptions.prototype.setValueType = function(value) {
  jspb.Message.setField(this, 5, value);
};


proto.scalapb.FieldOptions.prototype.clearValueType = function() {
  jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.scalapb.FieldOptions.prototype.hasValueType = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * repeated string annotations = 6;
 * @return {!Array<string>}
 */
proto.scalapb.FieldOptions.prototype.getAnnotationsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 6));
};


/** @param {!Array<string>} value */
proto.scalapb.FieldOptions.prototype.setAnnotationsList = function(value) {
  jspb.Message.setField(this, 6, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 */
proto.scalapb.FieldOptions.prototype.addAnnotations = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 6, value, opt_index);
};


proto.scalapb.FieldOptions.prototype.clearAnnotationsList = function() {
  this.setAnnotationsList([]);
};


/**
 * optional string map_type = 7;
 * @return {string}
 */
proto.scalapb.FieldOptions.prototype.getMapType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/** @param {string} value */
proto.scalapb.FieldOptions.prototype.setMapType = function(value) {
  jspb.Message.setField(this, 7, value);
};


proto.scalapb.FieldOptions.prototype.clearMapType = function() {
  jspb.Message.setField(this, 7, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.scalapb.FieldOptions.prototype.hasMapType = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional bool no_box = 30;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.scalapb.FieldOptions.prototype.getNoBox = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 30, false));
};


/** @param {boolean} value */
proto.scalapb.FieldOptions.prototype.setNoBox = function(value) {
  jspb.Message.setField(this, 30, value);
};


proto.scalapb.FieldOptions.prototype.clearNoBox = function() {
  jspb.Message.setField(this, 30, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.scalapb.FieldOptions.prototype.hasNoBox = function() {
  return jspb.Message.getField(this, 30) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.scalapb.EnumOptions = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.scalapb.EnumOptions.repeatedFields_, null);
};
goog.inherits(proto.scalapb.EnumOptions, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.scalapb.EnumOptions.displayName = 'proto.scalapb.EnumOptions';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.scalapb.EnumOptions.repeatedFields_ = [1,2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.scalapb.EnumOptions.prototype.toObject = function(opt_includeInstance) {
  return proto.scalapb.EnumOptions.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.scalapb.EnumOptions} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.scalapb.EnumOptions.toObject = function(includeInstance, msg) {
  var f, obj = {
    extendsList: jspb.Message.getRepeatedField(msg, 1),
    companionExtendsList: jspb.Message.getRepeatedField(msg, 2),
    type: jspb.Message.getField(msg, 3)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.scalapb.EnumOptions}
 */
proto.scalapb.EnumOptions.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.scalapb.EnumOptions;
  return proto.scalapb.EnumOptions.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.scalapb.EnumOptions} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.scalapb.EnumOptions}
 */
proto.scalapb.EnumOptions.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.addExtends(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.addCompanionExtends(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setType(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.scalapb.EnumOptions.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.scalapb.EnumOptions.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.scalapb.EnumOptions} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.scalapb.EnumOptions.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getExtendsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      1,
      f
    );
  }
  f = message.getCompanionExtendsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      2,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * repeated string extends = 1;
 * @return {!Array<string>}
 */
proto.scalapb.EnumOptions.prototype.getExtendsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 1));
};


/** @param {!Array<string>} value */
proto.scalapb.EnumOptions.prototype.setExtendsList = function(value) {
  jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 */
proto.scalapb.EnumOptions.prototype.addExtends = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


proto.scalapb.EnumOptions.prototype.clearExtendsList = function() {
  this.setExtendsList([]);
};


/**
 * repeated string companion_extends = 2;
 * @return {!Array<string>}
 */
proto.scalapb.EnumOptions.prototype.getCompanionExtendsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 2));
};


/** @param {!Array<string>} value */
proto.scalapb.EnumOptions.prototype.setCompanionExtendsList = function(value) {
  jspb.Message.setField(this, 2, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 */
proto.scalapb.EnumOptions.prototype.addCompanionExtends = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 2, value, opt_index);
};


proto.scalapb.EnumOptions.prototype.clearCompanionExtendsList = function() {
  this.setCompanionExtendsList([]);
};


/**
 * optional string type = 3;
 * @return {string}
 */
proto.scalapb.EnumOptions.prototype.getType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.scalapb.EnumOptions.prototype.setType = function(value) {
  jspb.Message.setField(this, 3, value);
};


proto.scalapb.EnumOptions.prototype.clearType = function() {
  jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.scalapb.EnumOptions.prototype.hasType = function() {
  return jspb.Message.getField(this, 3) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.scalapb.EnumValueOptions = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.scalapb.EnumValueOptions.repeatedFields_, null);
};
goog.inherits(proto.scalapb.EnumValueOptions, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.scalapb.EnumValueOptions.displayName = 'proto.scalapb.EnumValueOptions';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.scalapb.EnumValueOptions.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.scalapb.EnumValueOptions.prototype.toObject = function(opt_includeInstance) {
  return proto.scalapb.EnumValueOptions.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.scalapb.EnumValueOptions} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.scalapb.EnumValueOptions.toObject = function(includeInstance, msg) {
  var f, obj = {
    extendsList: jspb.Message.getRepeatedField(msg, 1),
    scalaName: jspb.Message.getField(msg, 2)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.scalapb.EnumValueOptions}
 */
proto.scalapb.EnumValueOptions.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.scalapb.EnumValueOptions;
  return proto.scalapb.EnumValueOptions.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.scalapb.EnumValueOptions} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.scalapb.EnumValueOptions}
 */
proto.scalapb.EnumValueOptions.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.addExtends(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setScalaName(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.scalapb.EnumValueOptions.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.scalapb.EnumValueOptions.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.scalapb.EnumValueOptions} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.scalapb.EnumValueOptions.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getExtendsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * repeated string extends = 1;
 * @return {!Array<string>}
 */
proto.scalapb.EnumValueOptions.prototype.getExtendsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 1));
};


/** @param {!Array<string>} value */
proto.scalapb.EnumValueOptions.prototype.setExtendsList = function(value) {
  jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 */
proto.scalapb.EnumValueOptions.prototype.addExtends = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


proto.scalapb.EnumValueOptions.prototype.clearExtendsList = function() {
  this.setExtendsList([]);
};


/**
 * optional string scala_name = 2;
 * @return {string}
 */
proto.scalapb.EnumValueOptions.prototype.getScalaName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.scalapb.EnumValueOptions.prototype.setScalaName = function(value) {
  jspb.Message.setField(this, 2, value);
};


proto.scalapb.EnumValueOptions.prototype.clearScalaName = function() {
  jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.scalapb.EnumValueOptions.prototype.hasScalaName = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.scalapb.OneofOptions = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.scalapb.OneofOptions.repeatedFields_, null);
};
goog.inherits(proto.scalapb.OneofOptions, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.scalapb.OneofOptions.displayName = 'proto.scalapb.OneofOptions';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.scalapb.OneofOptions.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.scalapb.OneofOptions.prototype.toObject = function(opt_includeInstance) {
  return proto.scalapb.OneofOptions.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.scalapb.OneofOptions} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.scalapb.OneofOptions.toObject = function(includeInstance, msg) {
  var f, obj = {
    extendsList: jspb.Message.getRepeatedField(msg, 1)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.scalapb.OneofOptions}
 */
proto.scalapb.OneofOptions.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.scalapb.OneofOptions;
  return proto.scalapb.OneofOptions.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.scalapb.OneofOptions} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.scalapb.OneofOptions}
 */
proto.scalapb.OneofOptions.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.addExtends(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.scalapb.OneofOptions.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.scalapb.OneofOptions.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.scalapb.OneofOptions} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.scalapb.OneofOptions.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getExtendsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      1,
      f
    );
  }
};


/**
 * repeated string extends = 1;
 * @return {!Array<string>}
 */
proto.scalapb.OneofOptions.prototype.getExtendsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 1));
};


/** @param {!Array<string>} value */
proto.scalapb.OneofOptions.prototype.setExtendsList = function(value) {
  jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 */
proto.scalapb.OneofOptions.prototype.addExtends = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


proto.scalapb.OneofOptions.prototype.clearExtendsList = function() {
  this.setExtendsList([]);
};



/**
 * A tuple of {field number, class constructor} for the extension
 * field named `options`.
 * @type {!jspb.ExtensionFieldInfo<!proto.scalapb.ScalaPbOptions>}
 */
proto.scalapb.options = new jspb.ExtensionFieldInfo(
    1020,
    {options: 0},
    proto.scalapb.ScalaPbOptions,
     /** @type {?function((boolean|undefined),!jspb.Message=): !Object} */ (
         proto.scalapb.ScalaPbOptions.toObject),
    0);

google_protobuf_descriptor_pb.FileOptions.extensionsBinary[1020] = new jspb.ExtensionFieldBinaryInfo(
    proto.scalapb.options,
    jspb.BinaryReader.prototype.readMessage,
    jspb.BinaryWriter.prototype.writeMessage,
    proto.scalapb.ScalaPbOptions.serializeBinaryToWriter,
    proto.scalapb.ScalaPbOptions.deserializeBinaryFromReader,
    false);
// This registers the extension field with the extended class, so that
// toObject() will function correctly.
google_protobuf_descriptor_pb.FileOptions.extensions[1020] = proto.scalapb.options;


/**
 * A tuple of {field number, class constructor} for the extension
 * field named `message`.
 * @type {!jspb.ExtensionFieldInfo<!proto.scalapb.MessageOptions>}
 */
proto.scalapb.message = new jspb.ExtensionFieldInfo(
    1020,
    {message: 0},
    proto.scalapb.MessageOptions,
     /** @type {?function((boolean|undefined),!jspb.Message=): !Object} */ (
         proto.scalapb.MessageOptions.toObject),
    0);

google_protobuf_descriptor_pb.MessageOptions.extensionsBinary[1020] = new jspb.ExtensionFieldBinaryInfo(
    proto.scalapb.message,
    jspb.BinaryReader.prototype.readMessage,
    jspb.BinaryWriter.prototype.writeMessage,
    proto.scalapb.MessageOptions.serializeBinaryToWriter,
    proto.scalapb.MessageOptions.deserializeBinaryFromReader,
    false);
// This registers the extension field with the extended class, so that
// toObject() will function correctly.
google_protobuf_descriptor_pb.MessageOptions.extensions[1020] = proto.scalapb.message;


/**
 * A tuple of {field number, class constructor} for the extension
 * field named `field`.
 * @type {!jspb.ExtensionFieldInfo<!proto.scalapb.FieldOptions>}
 */
proto.scalapb.field = new jspb.ExtensionFieldInfo(
    1020,
    {field: 0},
    proto.scalapb.FieldOptions,
     /** @type {?function((boolean|undefined),!jspb.Message=): !Object} */ (
         proto.scalapb.FieldOptions.toObject),
    0);

google_protobuf_descriptor_pb.FieldOptions.extensionsBinary[1020] = new jspb.ExtensionFieldBinaryInfo(
    proto.scalapb.field,
    jspb.BinaryReader.prototype.readMessage,
    jspb.BinaryWriter.prototype.writeMessage,
    proto.scalapb.FieldOptions.serializeBinaryToWriter,
    proto.scalapb.FieldOptions.deserializeBinaryFromReader,
    false);
// This registers the extension field with the extended class, so that
// toObject() will function correctly.
google_protobuf_descriptor_pb.FieldOptions.extensions[1020] = proto.scalapb.field;


/**
 * A tuple of {field number, class constructor} for the extension
 * field named `enumOptions`.
 * @type {!jspb.ExtensionFieldInfo<!proto.scalapb.EnumOptions>}
 */
proto.scalapb.enumOptions = new jspb.ExtensionFieldInfo(
    1020,
    {enumOptions: 0},
    proto.scalapb.EnumOptions,
     /** @type {?function((boolean|undefined),!jspb.Message=): !Object} */ (
         proto.scalapb.EnumOptions.toObject),
    0);

google_protobuf_descriptor_pb.EnumOptions.extensionsBinary[1020] = new jspb.ExtensionFieldBinaryInfo(
    proto.scalapb.enumOptions,
    jspb.BinaryReader.prototype.readMessage,
    jspb.BinaryWriter.prototype.writeMessage,
    proto.scalapb.EnumOptions.serializeBinaryToWriter,
    proto.scalapb.EnumOptions.deserializeBinaryFromReader,
    false);
// This registers the extension field with the extended class, so that
// toObject() will function correctly.
google_protobuf_descriptor_pb.EnumOptions.extensions[1020] = proto.scalapb.enumOptions;


/**
 * A tuple of {field number, class constructor} for the extension
 * field named `enumValue`.
 * @type {!jspb.ExtensionFieldInfo<!proto.scalapb.EnumValueOptions>}
 */
proto.scalapb.enumValue = new jspb.ExtensionFieldInfo(
    1020,
    {enumValue: 0},
    proto.scalapb.EnumValueOptions,
     /** @type {?function((boolean|undefined),!jspb.Message=): !Object} */ (
         proto.scalapb.EnumValueOptions.toObject),
    0);

google_protobuf_descriptor_pb.EnumValueOptions.extensionsBinary[1020] = new jspb.ExtensionFieldBinaryInfo(
    proto.scalapb.enumValue,
    jspb.BinaryReader.prototype.readMessage,
    jspb.BinaryWriter.prototype.writeMessage,
    proto.scalapb.EnumValueOptions.serializeBinaryToWriter,
    proto.scalapb.EnumValueOptions.deserializeBinaryFromReader,
    false);
// This registers the extension field with the extended class, so that
// toObject() will function correctly.
google_protobuf_descriptor_pb.EnumValueOptions.extensions[1020] = proto.scalapb.enumValue;


/**
 * A tuple of {field number, class constructor} for the extension
 * field named `oneof`.
 * @type {!jspb.ExtensionFieldInfo<!proto.scalapb.OneofOptions>}
 */
proto.scalapb.oneof = new jspb.ExtensionFieldInfo(
    1020,
    {oneof: 0},
    proto.scalapb.OneofOptions,
     /** @type {?function((boolean|undefined),!jspb.Message=): !Object} */ (
         proto.scalapb.OneofOptions.toObject),
    0);

google_protobuf_descriptor_pb.OneofOptions.extensionsBinary[1020] = new jspb.ExtensionFieldBinaryInfo(
    proto.scalapb.oneof,
    jspb.BinaryReader.prototype.readMessage,
    jspb.BinaryWriter.prototype.writeMessage,
    proto.scalapb.OneofOptions.serializeBinaryToWriter,
    proto.scalapb.OneofOptions.deserializeBinaryFromReader,
    false);
// This registers the extension field with the extended class, so that
// toObject() will function correctly.
google_protobuf_descriptor_pb.OneofOptions.extensions[1020] = proto.scalapb.oneof;

goog.object.extend(exports, proto.scalapb);
