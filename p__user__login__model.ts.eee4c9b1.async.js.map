{"version":3,"sources":["src/pages/user/login/model.ts"],"names":["LoginModel","namespace","state","status","undefined","effects","login","_Users_arvinx_CodeProject_MyRChainWallet_node_modules_babel_preset_umi_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_1___default","a","mark","_ref","_ref2","payload","select","put","username","password","userList","user","_ref3","location","_query","wrap","_context","prev","next","Object","_services_user__WEBPACK_IMPORTED_MODULE_4__","find","pwd","_services_login__WEBPACK_IMPORTED_MODULE_3__","uid","type","router","sent","query","redirect","window","href","umi__WEBPACK_IMPORTED_MODULE_2__","push","stop","reducers","save","_ref4","_Users_arvinx_CodeProject_MyRChainWallet_node_modules_babel_preset_umi_node_modules_babel_runtime_helpers_objectSpread__WEBPACK_IMPORTED_MODULE_0___default","__webpack_exports__"],"mappings":"0LAuBMA,GACJC,UAAW,QACXC,OACEC,YAAQC,GAGVC,SACGC,MADMC,EAAAC,EAAAC,KAAA,SAAAH,EAAAI,EAAAC,GAAA,IAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,OAAAd,EAAAC,EAAAc,KAAA,SAAAC,GAAA,eAAAA,EAAAC,KAAAD,EAAAE,MAAA,UACEb,EADFF,EACEE,QAAaC,EADfF,EACeE,OAAQC,EADvBH,EACuBG,IACpBC,EAAuBH,EAAvBG,SAAUC,EAAaJ,EAAbI,SACZC,EAAWS,OAAAC,EAAA,KAAAD,GACXR,EAAOD,EAASW,KAAK,SAAAV,GAAI,OAAIA,EAAKH,WAAaA,KAGjDG,GAAQA,EAAKW,MAAQb,EAPpB,CAAAO,EAAAE,KAAA,SASH,OADAC,OAAAI,EAAA,KAAAJ,CAAaR,EAAKa,KARfR,EAAAE,KAAA,EASGX,GACJkB,KAAM,OACNpB,SAAWT,OAAQ,QAXlB,OAckB,OAdlBoB,EAAAE,KAAA,GAcwBZ,EAAO,SAAAX,GAAK,OAAIA,EAAM+B,SAd9C,QAAAd,EAAAI,EAAAW,KAcKd,EAdLD,EAcKC,SAEAC,EAAUD,EAAVe,MAEJd,GAASA,EAAMe,SACjBC,OAAOjB,SAASkB,KAAOjB,EAAMe,SAE7BG,EAAA,UAAOC,KAAK,KArBXjB,EAAAE,KAAA,iBAwBH,OAxBGF,EAAAE,KAAA,GAwBGX,GACJkB,KAAM,OACNpB,SAAWT,OAAQ,WA1BlB,yBAAAoB,EAAAkB,SAAAnC,MAgCToC,UACEC,KADQ,SACHzC,EADG0C,GACe,IAAThC,EAASgC,EAAThC,QACZ,OAAAiC,OACK3C,EACAU,MAMIkC,EAAA","file":"p__user__login__model.ts.eee4c9b1.async.js","sourcesContent":["import { router } from 'umi';\n\nimport { accountLogin } from '@/services/login';\nimport { query } from '@/services/user';\nimport { Effect, Reducer } from '@/models/connect';\n\nexport interface LoginModelState {\n  status?: 'ok' | 'error';\n  type?: string;\n  currentAuthority?: 'user' | 'guest' | 'admin';\n}\n\nexport interface LoginModelStore {\n  namespace: string;\n  state: LoginModelState;\n  effects: {\n    login: Effect;\n  };\n  reducers: {\n    save: Reducer<LoginModelState>;\n  };\n}\n\nconst LoginModel: LoginModelStore = {\n  namespace: 'login',\n  state: {\n    status: undefined,\n  },\n\n  effects: {\n    *login({ payload }, { select, put }) {\n      const { username, password } = payload;\n      const userList = query();\n      const user = userList.find(user => user.username === username);\n\n      // Login successfully\n      if (user && user.pwd === password) {\n        accountLogin(user.uid);\n        yield put({\n          type: 'save',\n          payload: { status: 'ok' },\n        });\n\n        const { location } = yield select(state => state.router);\n\n        const { query } = location;\n\n        if (query && query.redirect) {\n          window.location.href = query.redirect;\n        } else {\n          router.push('/');\n        }\n      } else {\n        yield put({\n          type: 'save',\n          payload: { status: 'error' },\n        });\n      }\n    },\n  },\n\n  reducers: {\n    save(state, { payload }) {\n      return {\n        ...state,\n        ...payload,\n      };\n    },\n  },\n};\n\nexport default LoginModel;\n"],"sourceRoot":""}